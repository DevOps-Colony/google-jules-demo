name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to destroy'
        required: true
        type: choice
        options:
          - feature
          - dev
      destroy_backend:
        description: 'Destroy the S3 backend and DynamoDB lock table? (very destructive!)'
        required: true
        type: boolean
        default: false

jobs:
  plan-destroy:
    name: "Plan Destruction of ${{ github.event.inputs.environment }} environment"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=my-flask-app-terraform-state" \
            -backend-config="key=${{ github.event.inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="dynamodb_table=my-flask-app-terraform-lock"
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
      - name: Terraform Plan Destroy
        run: terraform plan -destroy -var-file="${{ github.event.inputs.environment }}.tfvars" -out=tfdestroyplan
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
      - name: Upload Terraform Destroy Plan
        uses: actions/upload-artifact@v4
        with:
          name: tf-destroy-working-dir-${{ github.event.inputs.environment }}
          path: terraform/environments/${{ github.event.inputs.environment }}
          retention-days: 1

  apply-destroy:
    name: "Apply Destruction of ${{ github.event.inputs.environment }} environment"
    runs-on: ubuntu-latest
    needs: plan-destroy
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Create Terraform Directory
        run: mkdir -p terraform/environments/${{ github.event.inputs.environment }}
      - name: Download Terraform Destroy Plan
        uses: actions/download-artifact@v4
        with:
          name: tf-destroy-working-dir-${{ github.event.inputs.environment }}
          path: terraform/environments/${{ github.event.inputs.environment }}
      - name: Terraform Apply Destroy
        run: terraform apply -auto-approve tfdestroyplan
        working-directory: terraform/environments/${{ github.event.inputs.environment }}

  destroy-backend:
    name: "Destroy S3 Backend"
    runs-on: ubuntu-latest
    needs: apply-destroy
    if: github.event.inputs.destroy_backend == true
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Make destroy_backend.sh executable
        run: chmod +x ${{ github.workspace }}/scripts/destroy_backend.sh
      - name: Destroy Backend Resources
        run: ${{ github.workspace }}/scripts/destroy_backend.sh
